group 'com.rightkarma'
version '1.0-SNAPSHOT'

apply plugin: 'java'
sourceCompatibility = 1.8
apply plugin: "war" // adding war would bring assemble task. run it to get war file in build folder

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0-m02'
    // https://mvnrepository.com/artifact/javax.ejb/javax.ejb-api
    compile group: 'javax.ejb', name: 'javax.ejb-api', version: '3.2'
    compile "javax.servlet:servlet-api:2.5"

    /*
    Notice that this artifact (org.apache.cxf:cxf-rt-frontend-jaxws:3.1.6) contains a file named javax.xml.ws.spi.Provider
    inside the META-INF/services directory.
    Java VM looks at the first line of this file to determine the JAX-WS implementation to make use of.
    In this case, content of the line is org.apache.cxf.jaxws.spi.ProviderImpl, referring to the implementation supplied by Apache CXF.
    */
    // http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.apache.cxf%22%20AND%20a%3A%22cxf-rt-frontend-jaxws%22
    compile "org.apache.cxf:cxf-rt-frontend-jaxws:3.1.6"
    // http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.apache.cxf%22%20AND%20a%3A%22cxf-rt-transports-http-jetty%22
    compile "org.apache.cxf:cxf-rt-transports-http-jetty:3.1.6"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}
def tomcat_home='C:\\UserProgramFiles\\apache-tomcat-8.5.24'
def tomcat_webapps = tomcat_home + '\\webapps'

task tom {
    doFirst {
        copy { from 'build/libs/jaxws.war' into tomcat_webapps }
    }
}

